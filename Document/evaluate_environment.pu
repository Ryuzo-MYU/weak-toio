@startuml

package Robot{
	class ActorUnit{
		- actionSender : ActionSender
		+ Act(LowLevelActionOpetration)
	}
	class SensorUnit{
		+ getSensorData()
	}
}

package EvaluationSystem{
	class Env{
		- sensorUnit : SensorUnit
		- envData : float
		+ GetEnvData() : float
	}
	abstract Evaluation{
		- env : Env
		- evaluationResult : Result
		+ EvaluateEnvironment(Env) : Result
	}
	class ConcleteEvaluation{
		+ ConcleteEvaluateEnvironment(Env) : Result
	}

	abstract Result
	class EvaluationResult
}

SensorUnit --> Env : 環境データを送信
Env --> Evaluation : 評価したいデータを送信
Evaluation <-- Result : 評価結果のフォーマットを定義
Evaluation <|-- ConcleteEvaluation : 実装
Result <|-- EvaluationResult : 実装


package ActionDecisionSystem{
	class ActionOperator{
		- evaluation : Evaluation
		- result : Result
	}
	class Action
	class ActionSender{
		+ SendAction(Action)
	}
}

Evaluation --> ActionOperator : 評価結果を送信
ActionOperator --> Action : Actionを生成
Action --> ActionSender : Actionを送信。内容を読み取り
ActionSender --> ActorUnit : 低レイヤーの行動命令を送信

@enduml